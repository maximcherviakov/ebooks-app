services:
  proxy:
    container_name: ebooks-app-proxy
    image: traefik:v2.11
    command: --providers.docker
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  backend:
    container_name: ebooks-app-backend
    build:
      context: ./
      target: backend-dev
    develop:
      watch:
        - path: ./server/src
          action: sync
          target: /usr/local/app/src
        - path: ./server/package.json
          action: rebuild
    volumes:
      - backend_uploads:/usr/local/app/uploads
    depends_on:
      - mongo
    labels:
      traefik.http.routers.backend.rule: (Host(`localhost`) || Host(`proxy`)) && PathPrefix(`/api`)
      traefik.http.services.backend.loadbalancer.server.port: 5000

  client:
    container_name: ebooks-app-client
    build:
      context: ./
      target: client-test
    develop:
      watch:
        - path: ./client/src
          action: sync
          target: /usr/local/app/src
        - path: ./client/package.json
          action: rebuild
    ports:
      - "3000:3000"
    labels:
      traefik.http.routers.client.rule: Host(`localhost`) || Host(`proxy`)
      traefik.http.services.client.loadbalancer.server.port: 3000

  ui-tests:
    container_name: ui-tests
    build:
      context: ./
      target: ui-tests
    volumes:
      - ./client/playwright-report:/usr/local/app/playwright-report
      - ./client/test-results:/usr/local/app/test-results
      - ./client/tests:/usr/local/app/tests
    environment:
      - DISPLAY=:99
      - BASE_URL=http://proxy
      - DEBUG=pw:api
      - CI=true
    shm_size: 2gb
    profiles: ["test"]

  kdt-ui-tests:
    container_name: kdt-ui-tests
    build:
      context: ./
      target: kdt-ui-tests
    volumes:
      - ./kdt-tests/test-results:/usr/local/app/test-results
      - ./kdt-tests/src:/usr/local/app/src
    environment:
      - DISPLAY=:99
      - BASE_URL=http://proxy
      - DEBUG=pw:api
    shm_size: 2gb
    profiles: ["kdt-test"]

  mongo:
    image: mongo:8.0
    container_name: ebooks-app-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: ebooks-db
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
      - ./init-db.js:/docker-entrypoint-initdb.d/init-db.js

volumes:
  mongodata:
    driver: local
  backend_uploads:
    driver: local
